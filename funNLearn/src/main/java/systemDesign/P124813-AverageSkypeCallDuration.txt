===========
Problem
===========
Design a system to calculate the duration of the average Skype calls. Events are 
tracked with the helped with a tracker app on your smart phone. 

=================================
Questions to ask
=================================
Q: Can a tracking service be started on phone aside skype?
Q: how often the reporting is done? (Daily)
Q: Is it per user or overall?

===========
Solution 1
===========
After every skype call a service reports user id, time stamp and call duration of the call. 
Following calculations can be kept on server then:

Overall average (including all users)
-------------------------------------
Let n = number of skype calls so far
Let a = average duration of all those skype calls

When the server receives a new event signifying that a skype call has ended and 
it's duration (d), you can update the running average by computing:

n = n + 1
a = a * ( (n - 1) / n) + d / n

Average per user
----------------
same calculations as above, but keep a hashtable of {user_id : [n, a]}
and perform the calculation

Scaling
-------
have multiple servers to compute a running average of the subset of skype calls it has seen.
Persistence servers can be used to save the current running average of a server, in case it goes down.

Later each server can be asked for a * n and global average can be 

(a*n)1 + (a*n)2 + (a*n)3......
-----------------------------
      n1 + n2 + n3.....


Performance
-----------
For accepting event at a very very high rate, each server can keep two services. 
One for accepting and storing the data and one for reading and performing calculations. 

The port service can just accept and keep data in a list/queue. After a certain 
time/data size the list is passed to calculate service and a new empty list is 
started by port service. 
