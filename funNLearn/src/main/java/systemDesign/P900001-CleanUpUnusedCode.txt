===========
Problem
===========
How would you clean up unused code in a big code base?
basically legacy code cleanup.

=================================
Questions to ask
=================================
Q: Do we have end to end test case written? 
Q: Is there a git checkin process followed by the team ? If yes we can find the files that have 
not been touched in so long time. 

===========
Solution 1
===========
Follow main method. 

===========
Solution 2 :
===========
Use a code coverage tool (like coverage.py, JaCoCo, Cobertura, Emma) and run all the tests end to end. 
find out which line is never reached. Follow those lines of code. 

============
Solution 3 :
============
Tombstone approach.
put log statements in every class and every method. 
after every 3 months check what comments have never been in the logging. 
flag those and after some time remove the ones with most number of flags

============
Solution 4 :
============
Follow Debug level logging, where stacktrace is present. 
Check packages/modules > classes > functions that are never in logs

============
Solution 5 :
============
A mixed approach of all the above. 
Some approaches are good in time, some are full proof and some are coservative approaches. 

